@import url('https://fonts.googleapis.com/css?family=Pacifico');

.Background { 
  background-color: #d1e595;

}

.Header {
  text-align: center;
  padding-top: 30px;
  background-color: #d1e595;
  color:white;
  font-size: 60px;
}

#border{
  width: 60%;
  text-align: center;
  border-style: solid;
  border-width: 2px;
  display: inline-block;
  font-family: 'Calibri', , san-serif;
}

.Button {
  padding-top: 40px;
  text-align: center;
  color: green;
  padding-bottom: 80px;
  border-radius: 50%
}

.Button2 {
  padding-top: 20px;
  text-align: center;
  color: green;
  border-radius: 50%;
  padding-bottom: 60px;
}

.Button3 {
  text-align: center;
  color: green;
  border-radius: 50%;
  padding-bottom: 60px;
  display: inline-block;
}


#but{
  height: 150px;
  width: 150px;
  border-radius: 50%;
  color: #d6d3cb;
  background-color: #fcfccc;
  box-shadow: 20px;
  font-size: 20px;
  font-family: 'Calibri', san-serif;
}

#but2 { 
  height: 50px;
  width: 80px;
  color: #d6d3cb;
  background-color: #fcfccc;
  font-size: 15px;
  font-family: 'Calibri', san-serif;
  border-radius: 15px;
  display:inline-block;
  ;
}

#but3 { 
  height: 50px;
  width: 80px;
  color: #d6d3cb;
  background-color: #fcfccc;
  font-size: 15px;
  font-family: 'Calibri', san-serif;
  border-radius: 15px;
  display:inline-block;
  margin-left: 10px;
}

.header{
  text-align: center; 
  height: 190px;
  width: auto;
  padding-top: 30px;
  padding-bottom: 30px;
}

.lime { 
  position: absolute; 
  top: 30px;
  left: 560px;
  height: 130px;
  width: auto;
}

.potato { 
  position: absolute; 
  top: 30px;
  left: 500px;
  height: 130px;
  width: auto;
}

#stamp{
  font-family: 'Calibri', san-serif;
}
.App-header {
  background-color: #222;
  height: 150px;
  padding: 20px;
  color: white;
  font-family: ‘Sunflower’, sans-serif;
}

.App-title {
  font-size: 1.5em;
}

.App-intro {
  font-size: large;
}

.timeStamp { 
  color: white; 
  font-size: 12px;
  padding-bottom: 80px;
  text-align: center;
  font-weight: 100;
}

form>button {
  margin-top: 100%;
}

input[type=text], select, textarea{
  width: 25%; 
  padding: 12px; 
  border: 1px solid #ccc; 
  border-radius: 4px; 
  margin-top: 10px; 
  margin-bottom: 16px; 
}

.secondPage { 
  background-color: #d1e595;
  padding-top: 60px;
  text-align: center; 
}

.loginPage { 
  background-color: #d1e595;
  padding-top: 50px;
  text-align: center; 
}

.foodLabel { 
	border-radius: 5px;
  background-color: #d1e595;
  padding-left: -50px;
  font-family: 'Calibri', san-serif;
 }

 .amountLabel { 
	border-radius: 5px;
  background-color: #d1e595;
  padding-bottom: 40px;
  padding-left: -50px;
  font-family: 'Calibri', san-serif;
 }
 
#foodID { 
  padding-right: 10px;
}

#amountID { 
  padding-right: 35px;
}

 .box{ 
    display: inline-block;
    text-align: center;
    border-style: solid; 
    border-color: white;
    margin: 50px;
    border-radius: 15px;
 }

 .box2{ 
  display: inline-block; 
  width: 34%; 
  border-style: solid; 
  border-color: white;
  border-radius: 15px;
  vertical-align: top;
  margin-right: 60px;
  margin-left: 50px
}

.box3{ 
  display: inline-block;
  width: 34%;
  border-style: solid; 
  border-color: white;
  border-radius: 15px;
  margin-left: 60px;
  margin-right: 50px;
}

.title { 
    padding-top: 30px;
    padding-bottom: 10px;
    width: 400px;
    font-size: 30px;
    color: white; 
    font-family: 'Pacifico', cursive;
}

.bottomHeader { 
  padding-top: 200px;
}

.bottomHeader2 { 
  padding-top: 100px;
}

.login { 
  text-align: center;
  background-color: #d1e595;

}

.username { 
  width: 300px;
  background-color: #d1e595;
}

.password { 
  width: 300px;  
  background-color: #d1e595;
}

@keyframes App-logo-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.foodItems { 
  padding-left: 50px;
  border-style: solid; 
  flex-wrap: wrap;
  
}

.summaryTitle { 
  text-align: center;
  font-size: 30px;
  color: white;
  padding-top: 10px;
  font-family: 'Pacifico', cursive;
}

.h1 { 
  color: black; 
  font-size: 10px;
}

.p { 
  color: black;
  font-size: 20px;
}

.decorations { 
  position: absolute; 
  top: 35px;
}

.orange { 
  position: absolute; 
  left: 270px;
  height: 80px;
  width: auto;
}

.apple { 
  position: absolute; 
  left: 880px;
  height: 80px;
  width: auto;
}

.banana  { 
  position: absolute; 
  left: 80px;
  height: 80px;
  width: auto;
}

.broccoli  { 
  position: absolute; 
  left: 1075px;
  height: 80px;
  width: auto;
}

.array { 
  width: 30%; 
  text-align: center;
  border-style: solid;
  margin: 0 auto; 
  border-radius: 20px;
  border-color: white;
  color: #FFB733;
  font-family: 'Calibri', san-serif;
  background-color: white;
  flex-wrap: wrap;
}

.space { 
  padding-top: 40px;
}

.array: hover {
	opacity: .5;
}
/* 
zipcode = request.form['zip']
r = requests.get("website url ")
json_object = r.json() */


import React, { Component } from "react";
import firebase from "./configs";
import axios from "axios";
import apple from './apple.png';
import orange from './orange.png';
import banana from './banana.png';
import broccoli from './broccoli.png';


export default class App3 extends Component{
    constructor(props){
        super(props)
        this.state = {
            name: "",
            amount: "",
            foodGroup: "",
            calories: "", 
            fat: "",
            protein: "",
            foods: [],
            nbd: []
        }
    }
    
    componentDidMount() {
        // grabbing data from firebase // 
        let userID = "/users/"+firebase.auth().currentUser.uid+"/foods"
        firebase.database().ref(userID).on("value",snapshot => {
            if(snapshot.val()){
                let entry = [];
                snapshot.forEach((child)=>{
                    let childData = child.val();
                    entry.push(childData);
                    console.log(childData);
                });
                this.setState({
                    ...this.state,
                    foods: entry
                });
            }
        });
        console.log(this.state.foods)
        // grabbing nbdno //
        const apiKey = "xfDET5R7EqwtYYaPcIdwa2DkKpf1jRzGXGJRFhsl";
        let nbdtemp = [];
        this.state.foods.forEach(entry=>{
            let nbdurl = "https://api.nal.usda.gov/ndb/search/?format=json&q="+entry.n+"&sort=n&max=25&offset=0&api_key="+apiKey
            console.log(nbdurl)
            axios.get(nbdurl)
            .then(response =>{
                let narrowData = []
                let results = response.data.list.item;
                for(let i = 0; i < results.length; i++){
                  if(results[i].name.length<entry.n.length+24){ // grabs the nbd number if the name is short 
                      nbdtemp.push(results[i].nbdno)
                      break;
                  }  
                }
            })
        })
        this.setState({
            nbd: nbdtemp
        })
        /*
        const ndbno = document.getElementById();
        const type = "b";
        const format = "json";
        const url = "https://api.nal.usda.gov/ndb/V2/reports/?ndbno=" + ndbno + "&type=" + type + "&format=" + format + "&api_key=" + apiKey;
       /* $.get(url, function( data ) {
            alert( "Data Loaded: " + JSON.stringify(data) );
        });*/
/*
        axios
        .get(url)
        .then(response => {
          this.setState({
            foodName: response.data.results,
            foodGroup: response.data.results,
            calories: response.data.results,
            fat: response.data.results,
            protein: response.data.results,
          });
        })
        .catch(err => {
          console.log(err);
        });
*/
console.log(this.state.nbd)
    }
    
    render() { 
        let array = this.state.foods.map(entry => {
            return <div className = "space"><div className="array">
            <h1>Food: {entry.n}</h1>
            <p>Amount: {entry.a}</p>
            </div></div>

        });
        /*
        let {foodName, foodGroup, calories, fat, protein} = this.state;
        let points = foodName.map(x => {
            return 
            <div>
            <li>{" "}Food:{x.foodName}{" "}</li>
            <li>{" "}Group:{x.foodGroup}{" "}</li>    
            <li>{" "}Calories:{x.calories}{" "}</li>    
            <li>{" "}Fat:{x.fat}{" "}</li>    
            <li>{" "}Protein:{x.protein}{" "}</li> 
            </div>
        });*/

        return(
            <div className='Background'>
                <div className="summaryTitle">
                    <h2>~ Diet Summary ~</h2></div>
                <div className="decorations">
                    <img src={orange} className = "orange"/>
                    <img src={apple} className = "apple"/>
                    <img src={banana} className = "banana"/>
                    <img src={broccoli} className = "broccoli"/>
                    </div>
                <div>{array}</div>
                <div className="bottomHeader"></div>
            </div>
        );
    }
}
        
    


import React, { Component } from "react";
import {auth} from "./configs";
import firebase from "./configs";
import {ButtonToolbar, Button} from "react-bootstrap";
import lime from './lime.png';
import {BrowserRouter, Route, Link} from 'react-router-dom';
import App3 from './App3.js';
export default class App2 extends Component{
    constructor(props){
        super(props)
        this.state = {
            name: "",
            amount: "",
            foods: [],
            passArray: null
        }
    }

    addtoFirebase(obj){
        let userID = firebase.auth().currentUser.uid
        let newPostKey =firebase.database().ref("/users/"+userID).child('foods').push().key
        let updates = {};
        updates['/foods/'+newPostKey] = obj;
        this.setState({
            name: "",
            amount: ""
        })
        return firebase.database().ref("/users/"+userID).update(updates)
    }

    updateField(field, value){
        this.setState({
            ...this.state,
            [field]:value
        });
    }
    render(){
        let newFood = {
            n: this.state.name,
            a: this.state.amount
        };    
        return(
        <div className='secondPage'>
            <div className="box">
            <div className = "imagess">
                <img src={lime} className = "lime"/></div>
            <div className="title">
            <h2>Enter Info: </h2></div>
            <div className="labels1">
                <div class="foodLabel">
                    <label for="food" id="foodID">Food Name: </label>
                    <input 
                    type="text" name="food"
                    value = {this.state.name}
                    onChange = {e => this.updateField("name",e.target.value)}
                    >
                    </input></div>
                <div className="amountLabel">
                    <label for="amount" id="amountID">Amount: </label>
                    <input 
                    type="text" name="amount" 
                    value = {this.state.amount}
                    onChange = {e => this.updateField("amount",e.target.value)}
                    >
                    </input></div>
             </div>
            <div className="Button3">
            <ButtonToolbar>
                <Button id="but2" type = "submit" value = "Submit" onClick = {()=> this.addtoFirebase(newFood)}>
                    {" "}
                    Add{" "}
                </Button>
                <Link to={'/Summary'}>
                <Button id="but3" type = "submit" value = "Submit"> 
                    {" "}
                    Calculate{" "}
                </Button>
                </Link>
            </ButtonToolbar> 
            </div> 
            </div>
            <div className="bottomHeader" />
         </div>
    );
    }
}

